version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: asset_management_db
    environment:
      POSTGRES_DB: asset_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: iloveyou044
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - asset_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  adminer:
    image: adminer
    container_name: asset_management_adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - asset_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Asset Management API
  asset-api:
    build: .
    container_name: asset_management_api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=iloveyou044
      - DB_NAME=asset_db
      - DB_SSL_MODE=disable
      - SERVER_PORT=8000
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production-make-it-long-and-random
      - JWT_EXPIRATION=24h
      - GIN_MODE=release
    depends_on:
      - postgres
    networks:
      - asset_network
    volumes:
      - ./logs:/app/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=asset-api"

  # Loki for log aggregation
  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki:/etc/loki
      - loki_data:/loki
    command: -config.file=/etc/loki/loki-config.yml
    networks:
      - asset_network

  # Promtail for log collection
  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    restart: unless-stopped
    volumes:
      - ./monitoring/promtail:/etc/promtail
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./logs:/app/logs:ro
    command: -config.file=/etc/promtail/promtail-config.yml
    networks:
      - asset_network
    depends_on:
      - loki

  # Grafana for visualization
  grafana:
    image: grafana/grafana:10.0.0
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - asset_network
    depends_on:
      - loki

  # Prometheus for metrics (optional but useful)
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - asset_network

volumes:
  postgres_data:
  loki_data:
  grafana_data:
  prometheus_data:

networks:
  asset_network:
    driver: bridge